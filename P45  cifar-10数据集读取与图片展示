
import matplotlib.pyplot as plt
import torchvision as tv
import torch as t
# import torchvision.transforms as transforms
#  error
from torchvision import transforms
from torchvision.transforms import ToPILImage
import cv2

# define data pre-solve
show = ToPILImage()  # Tensor -> Image
transform = transforms.Compose([
    transforms.ToTensor(),
    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))
])

# train dataset
trainset = tv.datasets.CIFAR10(
    root='/media/wangbin/F/',
    train=True,
    download=True,
    transform=transform
)
trainloader = t.utils.data.DataLoader(
    trainset,
    batch_size=4,
    shuffle=True,
    num_workers=2
)

# teset set
testset = tv.datasets.CIFAR10(
    '/media/wangbin/F',
    train=False,
    download=True,
    transform=transform
)

testloader = t.utils.data.DataLoader(
    testset,
    batch_size=4,
    shuffle=False,
    num_workers=2
)
classes = ('plane', 'car', 'bird', 'cat', 'deer',
           'dog', 'frog', 'horse', 'ship', 'truck')

dataiter = iter(trainloader)
images, labels = dataiter.next()

print(' '.join('%11s' % classes[labels[j]] for j in range(4)))
for j in range(0,4):
    plt.imshow(show((images[j] + 1) / 2).resize((100, 100)))
    plt.show()
    
    
    
## 遍历每一张图片和标签
# for i in range(0,49999):
#     (data, label) = trainset[i]
#     print(classes[label])
#
#     show((data + 1) / 2).resize((100, 100))
#     # print(data.size())
#     plt.imshow(show((data + 1) / 2))
#     # plt.imshow(show((data+1)/2).resize((100,100)))
#     plt.show()
